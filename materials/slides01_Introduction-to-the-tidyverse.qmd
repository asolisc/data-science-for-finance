---
# title: "Data Science for the Financial Analyst"
format: 
  revealjs:
    # theme: "theme/quarto_theme.scss"
    logo: "https://cryptologos.cc/logos/cardano-ada-logo.svg?v=023"
    height: 1080
    width: 1920
    incremental: false
    footer: "[Return to website](../lectures/01_Introduction.html)"
# title-slide-attributes:
  # data-background-size: contain
  # data-background-image: "images/btc_candles.jpg"
  # data-background-color: "#0A2C59"
editor_options: 
  chunk_output_type: console
---

#  {background-image="../img/wallpaper/bbg_test6.jpeg" background-color="#000000"}

<h1 class="title_h1">

Introduction<br /> to the

</h1>

<!-- `r fontawesome::fa("github", "white")` [github.com/asolisc/data-science-for-finance](https://github.com/asolisc/data-science-for-finance) -->

![](https://raw.githubusercontent.com/rstudio/hex-stickers/master/PNG/tidyverse.png){.absolute top="25" left="650" width="200"}

<!-- From bottom left to upper right: -->

# Why data science for finance?

Chart de Medallion Fund

```{r}

```

# Why R and not just Excel for Finance?

Imagen de R vs. logo de Excel

# Challenge (R vs. Excel)

Hacer challenges de 3 Exceles con datos de índices.

<!-- -- hacer grafiquita dinámica, etc. --- -->

```{r}
library(tidyverse)
library(readxl)
library(highcharter)


target_dir <- "../data/xl/"
file_paths <- fs::dir_ls(target_dir, glob = "*.xlsx")


indexes_df <- map(.x = file_paths, .f = ~read_excel(path = .x, na = "null")) |> 
  list_rbind(names_to = "index") |> 
  janitor::clean_names() |> 
  mutate(
    index = basename(index),
    index = str_remove(index, "\\.xlsx"),
    date = as_date(date)
  ) |> 
  select(date, index, close) 

indexes_wide <- indexes_df |> 
  pivot_wider(names_from = index, values_from = close) |> 
  drop_na() |> 
  janitor::clean_names() |> 
  rename("sp_500" = s_p500)

returns_df <- indexes_wide |> 
  arrange(date) |> 
  mutate(
    across(.cols = !date, 
           .fns = ~round(.x / .x[1] * 100,2)
           # .names = "{.col}_normalized"
           ),
  )

# Interactive chart
returns_df |> 
  pivot_longer(cols = !date,
               names_to = "index", 
               values_to = "normalized_value"
               ) |> 
  ggplot(aes(date, normalized_value, color = index)) +
  geom_line()

returns_df |> 
 hchart("line",
         hcaes(date,sp_500),
         color = "#258039",
         name="S&P 500"
        ) %>%
    hc_add_series(
      data = returns_df,
      type = "line", 
      hcaes(x = date, y = nasdaq_100),
      name = "Nasdaq 100",
      color = "#F28F43"
      ) %>%
  hc_add_series(
      data = returns_df,
      type = "line", 
      hcaes(x = date, y = ipc_mexbol),
      name = "S&P/BMV IPC",
      color = "#0D5C99"
      ) %>%
  
    hc_title(
    text = "Value of $100 investment"
    ) %>% 
  hc_add_theme(hc_theme_538())


# highchart(type = "stock") %>%
#   hc_add_series(
#     data = returns_df,
#     type = "line",
#     hcaes(x = date, y = nasdaq_100),
#     name = "Nasdaq 100",
#     color = "#258039"
#   ) %>%
#   hc_add_series(
#     data = returns_df,
#     type = "line",
#     hcaes(x = date, y = sp_500),
#     name = "S&P 500",
#     color = "#F28F43"
#   ) %>%
#   hc_add_series(
#     data = returns_df,
#     type = "line",
#     hcaes(x = date, y = ipc_mexbol),
#     name = "S&P/BMV IPC",
#     color = "#0D5C99"
#   ) %>%
#   hc_title(text = "Cumulative Returns") %>%
#   hc_xAxis(title = list(text = "Date")) %>%
#   hc_yAxis(title = list(text = "Value of $100 investment"))


```
